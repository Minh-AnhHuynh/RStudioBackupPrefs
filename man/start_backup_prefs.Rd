% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/start_backup_prefs.R
\name{start_backup_prefs}
\alias{start_backup_prefs}
\title{Start the backup process}
\usage{
start_backup_prefs(
  github_backup = FALSE,
  copy_to_local = FALSE,
  open_backup_path = FALSE,
  preference_path = "R/rstudio_preferences/",
  git_message = "Backup of R Studio preferences on {Sys.Date()}",
  repository = "."
)
}
\arguments{
\item{github_backup}{boolean: Upload file to github.}

\item{copy_to_local}{boolean: Copy your .json files to local if TRUE.}

\item{open_backup_path}{boolean: Open the default backup folder for convenience if TRUE.}

\item{preference_path}{string: Path to local backup folder}

\item{git_message}{string: Your git commit message. Default is Backup of R Studio preferences on \code{Sys.Date()}."}

\item{repository}{string. Defaults to the current git repository.}
}
\value{
Copy rstudio_bindings.json, addins.json rstudio-bindings.json and
r.snippets to .bak files in their native config folder. Then copy files to
working directory in path and executes git push if \code{github_backup = TRUE}
}
\description{
Function will start backing up your files in their folder to .bak. Use Make sure to have a git initiated
repository.
}
\details{
Function wrapper using \code{backup_prefs()}. if github_backup = TRUE,
will then use those functions: \code{copy_files_to_local()} and
\code{upload_prefs_to_github()}
}
\examples{
\dontshow{if (has_git_repository()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Leave defaults to simply backup.
start_backup_prefs()

# Customize preferences and git_message
start_backup_prefs(
  github_backup = TRUE,
  preference_path = "R/rstudio_preferences/",
  git_message = "Backup preferences"
)
\dontshow{\}) # examplesIf}
}
